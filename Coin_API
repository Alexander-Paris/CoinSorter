import cv2
import time
import google.generativeai as genai

# Configure Gemini API key
genai.configure(api_key="YOUR-GEMINI-API-KEY-HERE")  # <-- Replace with your actual key

# Use Gemini Flash 1.5 model
model = genai.GenerativeModel(model_name="gemini-1.5-flash")

# Capture image from webcam
def capture_image(filename="coin.jpg"):
    cap = cv2.VideoCapture(0)

    if not cap.isOpened():
        raise Exception("Could not open webcam")

    # Set high resolution
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1920)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1080)

    time.sleep(2)  # Let camera warm up

    ret, frame = cap.read()
    cap.release()

    if not ret:
        raise Exception("Failed to capture image from webcam")

    cv2.imwrite(filename, frame)
    print(f"Image saved to {filename}")
    return filename

# Load image as bytes
def load_image_bytes(path):
    with open(path, "rb") as f:
        return f.read()

# Analyze coin image
def analyze_coin():
    image_path = capture_image()
    image_data = load_image_bytes(image_path)

    prompt = (
        "You are an expert coin appraiser and professional numismatist. "
        "Identify the following from this coin image:\n"
        "- Likely mint year\n"
        "- Country of origin\n"
        "- Denomination (e.g., cent, quarter, etc.)\n"
        "- Mint mark (if visible)\n"
        "- Estimated grade (Poor, Fine, XF, MS-65, etc.)\n"
        "Be detailed and explain anything unclear."
    )

    response = model.generate_content(
        [
            prompt,
            {"mime_type": "image/jpeg", "data": image_data}
        ]
    )

    print("\n--- Gemini Coin Analysis Result ---")
    print(response.text)

if __name__ == "__main__":
    analyze_coin()
