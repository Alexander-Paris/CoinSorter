import cv2
import time

def preprocess_grayscale(image):
    # Step 1: Convert to Grayscale only
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    return gray

def test_camera():
    cap = cv2.VideoCapture(0)

    if not cap.isOpened():
        raise Exception("Could not open webcam")

    # Force higher resolution
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1920)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1080)

    time.sleep(2)

    print("Press SPACE to capture and preprocess an image. Press ESC to exit.")

    while True:
        ret, frame = cap.read()
        if not ret:
            print("Failed to grab frame")
            break

        # Try to fix color format
        try:
            frame = cv2.cvtColor(frame, cv2.COLOR_YUV2BGR_YUYV)
        except:
            pass

        # Show live camera feed
        cv2.imshow("Live View - Press SPACE to Capture", frame)

        key = cv2.waitKey(1) & 0xFF

        if key == 27:  # ESC
            print("Exiting...")
            break
        elif key == 32:  # SPACE
            # Preprocess: Grayscale only
            processed = preprocess_grayscale(frame)

            # Save raw and processed images
            timestamp = int(time.time())
            raw_filename = f"coin_raw_{timestamp}.jpg"
            processed_filename = f"coin_grayscale_{timestamp}.jpg"

            cv2.imwrite(raw_filename, frame, [cv2.IMWRITE_JPEG_QUALITY, 100])
            cv2.imwrite(processed_filename, processed)

            print(f"Saved raw image: {raw_filename}")
            print(f"Saved grayscale processed image: {processed_filename}")

    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    test_camera()
