import cv2
import numpy as np
import time

def preprocess_color_enhance(image):
    # Step 1: Apply slight Gaussian Blur to remove noise
    blurred = cv2.GaussianBlur(image, (3, 3), 0)

    # Step 2: Sharpen the image (without losing color)
    kernel = np.array([
        [0, -1, 0],
        [-1, 5, -1],
        [0, -1, 0]
    ])
    sharpened = cv2.filter2D(blurred, -1, kernel)

    # Step 3: Increase contrast (for BGR)
    lab = cv2.cvtColor(sharpened, cv2.COLOR_BGR2LAB)
    l, a, b = cv2.split(lab)

    clahe = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(8,8))
    cl = clahe.apply(l)

    merged = cv2.merge((cl, a, b))
    final = cv2.cvtColor(merged, cv2.COLOR_LAB2BGR)

    return final

def test_camera():
    cap = cv2.VideoCapture(0)

    if not cap.isOpened():
        raise Exception("Could not open webcam")

    # Force higher resolution
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1920)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1080)

    time.sleep(2)

    print("Press SPACE to capture and preprocess an image. Press ESC to exit.")

    while True:
        ret, frame = cap.read()
        if not ret:
            print("Failed to grab frame")
            break

        try:
            frame = cv2.cvtColor(frame, cv2.COLOR_YUV2BGR_YUYV)
        except:
            pass

        cv2.imshow("Live View - Press SPACE to Capture", frame)

        key = cv2.waitKey(1) & 0xFF

        if key == 27:  # ESC
            print("Exiting...")
            break
        elif key == 32:  # SPACE
            # Preprocess: Color enhance
            processed = preprocess_color_enhance(frame)

            timestamp = int(time.time())
            raw_filename = f"coin_raw_{timestamp}.jpg"
            processed_filename = f"coin_color_enhanced_{timestamp}.jpg"

            cv2.imwrite(raw_filename, frame, [cv2.IMWRITE_JPEG_QUALITY, 100])
            cv2.imwrite(processed_filename, processed)

            print(f"Saved raw image: {raw_filename}")
            print(f"Saved color enhanced image: {processed_filename}")

    cap.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    test_camera()
